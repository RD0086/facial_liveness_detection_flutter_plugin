group 'com.esfaceid.facial_liveness_detection_flutter_plugin'
version '1.0'

buildscript {
    ext.kotlin_version = '1.7.10'
    repositories {
        maven{
            allowInsecureProtocol = true
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        maven{
            allowInsecureProtocol = true
            url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'
        }
        maven{
            allowInsecureProtocol = true
            url 'https://maven.aliyun.com/repository/google'
        }
        maven {
            url "https://jitpack.io"
        }
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.2'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

    }
}

rootProject.allprojects {
    repositories {
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'
            allowInsecureProtocol = true}
        maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'
            allowInsecureProtocol = true}
        maven{ url 'https://maven.aliyun.com/repository/google'
            allowInsecureProtocol = true}
        //添加这一行
        maven { url "https://storage.googleapis.com/download.flutter.io" }
        google()
        jcenter()
    }
}

apply plugin: 'com.android.library'

android {
    if (project.android.hasProperty("namespace")) {
        namespace 'com.esfaceid.facial_liveness_detection_flutter_plugin'
    }

    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 19
    }

    dependencies {
        testImplementation 'junit:junit:4.13.2'
        testImplementation 'org.mockito:mockito-core:5.0.0'
    }

    testOptions {
        unitTests.all {
            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}


repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies{
    implementation(name: 'esfaceauth-debug', ext: 'aar')
    implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.75'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation 'com.zhy:okhttputils:2.6.2'
}